{"version":3,"sources":["index.js"],"names":["_trim","str","type","replace","module","exports","subList","list","curIndex","per","nextList","nextIndex","slice","length","trim","replaceAll","AFindText","ARepText","raRegExp","RegExp","removeRepeatArray","arr","upsetArr","sort","Math","random","maxArr","max","apply","minArr","min","throttle","method","delay","context","tid","args","call","setTimeout","countNum","e","a","split","map","row","reg","key","value","match","push","getStyle","oElm","strCssRule","strValue","document","defaultView","getComputedStyle","getPropertyValue","currentStyle","strMatch","p1","toUpperCase","cutstr","len","temp","icount","patrn","strre","i","substr","exec","discriCard","id","result","UUserCard","date","substring","parseInt","sex","checkDate","val","test","randomPassword","size","seed","seedlength","createPassword","j","floor","myRegExp","isQQ","isPhone","isEmail","isNumber","isChinese","isPostcode","isIDcard","isURL","isDate","isIP","pick","obj","keys","emp","k","reduce","res","o","reject","filter","includes","convertCurrency","quickSort","pivotIndex","pivot","splice","left","right","concat","money","cnNums","Array","cnIntRadice","cnIntUnits","cnDecUnits","cnInteger","cnIntLast","maxNum","integerNum","decimalNum","chineseStr","parts","parseFloat","toString","indexOf","zeroCount","IntLen","n","p","q","m","decLen","Number"],"mappings":"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","file":"index.js","sourceRoot":"G:/aegis/aegis_utils","sourcesContent":["/**\r\n * Created by wuhao on 2017/2/12.\r\n */\r\nconst _trim = (str, type) => {\r\n  // 去除空格  type 1-所有空格  2-前后空格  3-前空格 4-后空格\r\n  switch (type) {\r\n    case 1: return str.replace(/\\s+/g, '');\r\n    case 2: return str.replace(/(^\\s*)|(\\s*$)/g, '');\r\n    case 3: return str.replace(/(^\\s*)/g, '');\r\n    case 4: return str.replace(/(\\s*$)/g, '');\r\n    default:return str;\r\n  }\r\n};\r\nmodule.exports = {\r\n  subList: (list, curIndex, per) => {\r\n    if (per < 0 || curIndex < 0) {\r\n      return {\r\n        nextList: [],\r\n        nextIndex: 0\r\n      };\r\n    }\r\n    let nextIndex = curIndex + per;\r\n    const nextList = list.slice(curIndex, nextIndex);\r\n    if (nextIndex >= list.length) {\r\n      nextIndex = 0;\r\n    }\r\n    return {\r\n      nextList,\r\n      nextIndex\r\n    };\r\n  },\r\n  // 去掉空格\r\n  trim: _trim,\r\n  // 替换字符\r\n  replaceAll: (str, AFindText, ARepText) => {\r\n    const raRegExp = new RegExp(AFindText, 'g');\r\n    return str.replace(raRegExp, ARepText);\r\n  },\r\n  // 数组去重\r\n  /* istanbul ignore if  */\r\n  removeRepeatArray: arr => Array.from(new Set(arr)),\r\n  // 数组升序排列\r\n  /* istanbul ignore if  */\r\n  upsetArr: arr => arr.sort(() => Math.random() - 0.5),\r\n  // 数组最大值\r\n  /* istanbul ignore if  */\r\n  maxArr: arr => Math.max.apply(null, arr),\r\n  // 数组最小值\r\n  /* istanbul ignore if  */\r\n  minArr: arr => Math.min.apply(null, arr),\r\n  // 节流函数\r\n  /* istanbul ignore if  */\r\n  throttle: (method, delay, context) => function (...args) {\r\n    if (!method.tid) {\r\n      method.call(context, ...args);\r\n      method.tid = 1;\r\n      setTimeout(() => (method.tid = 0), delay);\r\n    }\r\n  },\r\n  // 找出字符串中字符数最多的那个字符,不包括空格\r\n  countNum: (str) => {\r\n    const e = [];\r\n    const a = [...new Set(_trim(str, 1).split(''))].map((row) => {\r\n      const reg = new RegExp(row, 'g');\r\n      return {\r\n        key: row,\r\n        value: str.match(reg).length\r\n      };\r\n    });\r\n    a.map(row => row.value === Math.max(...a.map(row => row.value)) ? e.push(row.key) : null);\r\n    return e;\r\n  },\r\n  // 获取元素的css样式\r\n  getStyle: (oElm, strCssRule) => {\r\n    let strValue = '';\r\n    if (document.defaultView && document.defaultView.getComputedStyle) {\r\n      strValue = document.defaultView.getComputedStyle(oElm, '').getPropertyValue(strCssRule);\r\n    } else if (oElm.currentStyle) {\r\n      strCssRule = strCssRule.replace(/\\-(\\w)/g, (strMatch, p1) => p1.toUpperCase());\r\n      strValue = oElm.currentStyle[strCssRule];\r\n    }\r\n    return strValue;\r\n  },\r\n  // 字符串截取\r\n  cutstr: (str, len) => {\r\n    let temp = '';\r\n    let icount = 0;\r\n    const patrn = /[^\\x00-\\xff]/;\r\n    let strre = '';\r\n    for (let i = 0; i < str.length; i += 1) {\r\n      if (icount <= len - 1) {\r\n        temp = str.substr(i, 1);\r\n        // 汉子或者全角的话算2个字节\r\n        if (patrn.exec(temp) == null) {\r\n          icount += 1;\r\n        } else {\r\n          icount += 2;\r\n        }\r\n        strre += temp;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return `${strre}...`;\r\n  },\r\n  // 从身份证获取信息\r\n  discriCard: (id) => {\r\n    const result = {};\r\n    const UUserCard = id;\r\n    result.date = `${UUserCard.substring(6, 10)}-${UUserCard.substring(10, 12)}-${UUserCard.substring(12, 14)}`;\r\n    if (parseInt(UUserCard.substr(16, 1), 10) % 2 === 1) {\r\n      result.sex = '男';\r\n    } else {\r\n      result.sex = '女';\r\n    }\r\n    return result;\r\n  },\r\n  // 检查日期有效性\r\n  checkDate: (val) => {\r\n    const a = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\r\n    if (!a.test(val)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n  // 生成随机密码\r\n  randomPassword: (size) => {\r\n    const seed = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'm', 'n', 'p', 'Q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\r\n      '2', '3', '4', '5', '6', '7', '8', '9'];\r\n    const seedlength = seed.length;\r\n    let createPassword = '';\r\n    let j;\r\n    for (let i = 0; i < size; i++) {\r\n      j = Math.floor(Math.random() * seedlength);\r\n      createPassword += seed[j];\r\n    }\r\n    return createPassword;\r\n  },\r\n  // 常见的正则表达式\r\n  myRegExp: {\r\n    // 检查字符串是否为合法QQ号码\r\n    isQQ (str) {\r\n      // 1 首位不能是0  ^[1-9]\r\n      // 2 必须是 [5, 11] 位的数字  \\d{4, 9}\r\n      const reg = /^[1-9][0-9]{4,9}$/gim;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否为合法手机号码\r\n    isPhone (str) {\r\n      const reg = /^(0|86|17951)?(13[0-9]|15[012356789]|18[0-9]|14[57]|17[678])[0-9]{8}$/;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否为合法Email地址\r\n    isEmail (str) {\r\n      const reg = /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/;\r\n      // var reg = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否是数字\r\n    isNumber (str) {\r\n      const reg = /^\\d+$/;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否存在中文\r\n    isChinese (str) {\r\n      const reg = /[\\u4e00-\\u9fa5]/gm;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否为合法邮政编码\r\n    isPostcode (str) {\r\n      // 起始数字不能为0，然后是5个数字  [1-9]\\d{5}\r\n      const reg = /^[1-9]\\d{5}$/g;\r\n      // var reg = /^[1-9]\\d{5}(?!\\d)$/;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否为合法身份证号码\r\n    isIDcard (str) {\r\n      const reg = /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否为合法URL\r\n    isURL (str) {\r\n      const reg = /^https?:\\/\\/(([a-zA-Z0-9_-])+(\\.)?)*(:\\d+)?(\\/((\\.)?(\\?)?=?&?[a-zA-Z0-9_-](\\?)?)*)*$/i;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否为合法日期格式 yyyy-mm-dd\r\n    isDate (str) {\r\n      const reg = /^[1-2][0-9][0-9][0-9]-[0-1]{0,1}[0-9]-[0-3]{0,1}[0-9]$/;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    // 检查字符串是否为合法IP地址\r\n    isIP (str) {\r\n      // 1.1.1.1  四段  [0 , 255]\r\n      // 第一段不能为0\r\n      // 每个段不能以0开头\r\n      //\r\n      // 本机IP: 58.50.120.18 湖北省荆州市 电信\r\n      const reg = /^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}$/gi;\r\n      if (reg.test(str)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n  pick: (obj, keys, emp) => keys.map(k => k in obj ? { [k]: obj[k] } : emp ? { [k]: '' } : {})\r\n    .reduce((res, o) => Object.assign(res, o), {}),\r\n  reject: (obj, keys) => Object.keys(obj)\r\n    .filter(k => !keys.includes(k))\r\n    .map(k => ({ [k]: obj[k] }))\r\n    .reduce((res, o) => Object.assign(res, o), {}),\r\n    convertCurrency\r\n};\r\nfunction quickSort (arr) {\r\n  // 如果数组<=1,则直接返回\r\n  if (arr.length <= 1) { return arr; }\r\n  const pivotIndex = Math.floor(arr.length / 2);\r\n  // 找基准，并把基准从原数组删除\r\n  const pivot = arr.splice(pivotIndex, 1)[0];\r\n  // 定义左右数组\r\n  const left = [];\r\n  const right = [];\r\n\r\n  // 比基准小的放在left，比基准大的放在right\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i] <= pivot) {\r\n      left.push(arr[i]);\r\n    } else {\r\n      right.push(arr[i]);\r\n    }\r\n  }\r\n  // 递归\r\n  return quickSort(left).concat([pivot], quickSort(right));\r\n}\r\n// console.log(quickSort([3, 1, 5, 4, 6, 8, 7, 9]));\r\nfunction convertCurrency (money) {\r\n  // 汉字的数字\r\n  const cnNums = new Array('零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖');\r\n  // 基本单位\r\n  const cnIntRadice = new Array('', '拾', '佰', '仟');\r\n  // 对应整数部分扩展单位\r\n  const cnIntUnits = new Array('', '万', '亿', '兆');\r\n  // 对应小数部分单位\r\n  const cnDecUnits = new Array('角', '分', '毫', '厘');\r\n  // 整数金额时后面跟的字符\r\n  const cnInteger = '整';\r\n  // 整型完以后的单位\r\n  const cnIntLast = '元';\r\n  // 最大处理的数字\r\n  const maxNum = 999999999999999.9999;\r\n  // 金额整数部分\r\n  let integerNum;\r\n  // 金额小数部分\r\n  let decimalNum;\r\n  // 输出的中文金额字符串\r\n  let chineseStr = '';\r\n  // 分离金额后用的数组，预定义\r\n  let parts;\r\n  if (money == '') { return ''; }\r\n  money = parseFloat(money);\r\n  if (money >= maxNum) {\r\n    // 超出最大处理数字\r\n    return '';\r\n  }\r\n  if (money == 0) {\r\n    chineseStr = cnNums[0] + cnIntLast + cnInteger;\r\n    return chineseStr;\r\n  }\r\n  // 转换为字符串\r\n  money = money.toString();\r\n  if (money.indexOf('.') == -1) {\r\n    integerNum = money;\r\n    decimalNum = '';\r\n  } else {\r\n    parts = money.split('.');\r\n    integerNum = parts[0];\r\n    decimalNum = parts[1].substr(0, 4);\r\n  }\r\n  // 获取整型部分转换\r\n  if (parseInt(integerNum, 10) > 0) {\r\n    let zeroCount = 0;\r\n    const IntLen = integerNum.length;\r\n    for (var i = 0; i < IntLen; i++) {\r\n      var n = integerNum.substr(i, 1);\r\n      const p = IntLen - i - 1;\r\n      const q = p / 4;\r\n      const m = p % 4;\r\n      if (n == '0') {\r\n        zeroCount++;\r\n      } else {\r\n        if (zeroCount > 0) {\r\n          chineseStr += cnNums[0];\r\n        }\r\n        // 归零\r\n        zeroCount = 0;\r\n        chineseStr += cnNums[parseInt(n)] + cnIntRadice[m];\r\n      }\r\n      if (m == 0 && zeroCount < 4) {\r\n        chineseStr += cnIntUnits[q];\r\n      }\r\n    }\r\n    chineseStr += cnIntLast;\r\n  }\r\n  // 小数部分\r\n  if (decimalNum != '') {\r\n    const decLen = decimalNum.length;\r\n    for (var i = 0; i < decLen; i++) {\r\n      var n = decimalNum.substr(i, 1);\r\n      if (n != '0') {\r\n        chineseStr += cnNums[Number(n)] + cnDecUnits[i];\r\n      }\r\n    }\r\n  }\r\n  if (chineseStr == '') {\r\n    chineseStr += cnNums[0] + cnIntLast + cnInteger;\r\n  } else if (decimalNum == '') {\r\n    chineseStr += cnInteger;\r\n  }\r\n  return chineseStr;\r\n}\r\n\r\n"]}